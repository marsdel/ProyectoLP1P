Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    DEFINED
    EXPONENT_AND
    NEXT
    NIL
    PUTS
    REDO
    RETRY
    SELF
    VAR_SYSTEM
    _FILE_
    _LINE_

Grammar

Rule 0     S' -> program
Rule 1     program -> compstmt
Rule 2     compstmt -> stmt
Rule 3     compstmt -> stmt term
Rule 4     compstmt -> stmt term expr term
Rule 5     stmt -> call do LBRACKET RBRACKET
Rule 6     stmt -> LBRACKET block_var RBRACKET
Rule 7     stmt -> LBRACKET OR_SYMBOL block_var OR_SYMBOL RBRACKET compstmt END
Rule 8     stmt -> UNDEF fname
Rule 9     stmt -> ALIAS fname fname
Rule 10    stmt -> stmt IF expr
Rule 11    stmt -> stmt WHILE expr
Rule 12    stmt -> stmt UNLESS expr
Rule 13    stmt -> stmt UNTIL expr
Rule 14    stmt -> BEGIN LKEY compstmt RKEY
Rule 15    stmt -> END LKEY compstmt RKEY
Rule 16    stmt -> lhs = command LBRACKET do LBRACKET OR_SYMBOL block_var OR_SYMBOL RBRACKET compstmt END RBRACKET
Rule 17    stmt -> expr
Rule 18    expr -> mlhs = mrhs
Rule 19    expr -> RETURN call_args
Rule 20    expr -> YIELD call_args
Rule 21    expr -> expr AND expr
Rule 22    expr -> expr OR expr
Rule 23    expr -> NOT expr
Rule 24    expr -> command
Rule 25    expr -> NOT_SYMBOL command
Rule 26    expr -> arg
Rule 27    call -> function
Rule 28    call -> command
Rule 29    command -> operation call_args
Rule 30    command -> primary DOT operation call_args
Rule 31    command -> primary UNARY_OP operation call_args
Rule 32    command -> SUPER call_args
Rule 33    function -> operation LBRACKET LPAREN LBRACKET call_args RBRACKET RPAREN RBRACKET
Rule 34    function -> primary DOT operation LPAREN call_args RPAREN
Rule 35    function -> primary UNARY_OP operation LPAREN call_args RPAREN
Rule 36    function -> primary DOT operation
Rule 37    function -> primary UNARY_OP operation
Rule 38    function -> SUPER LPAREN call_args RPAREN
Rule 39    function -> SUPER
Rule 40    arg -> lhs = arg
Rule 41    arg -> lhs op_asgn arg
Rule 42    arg -> arg RANGE_INCLUSIVE arg
Rule 43    arg -> arg RANGE_EXCLUSIVE arg
Rule 44    arg -> math_operations
Rule 45    arg -> PLUS arg
Rule 46    arg -> MINUS arg
Rule 47    arg -> arg OR_SYMBOL arg
Rule 48    arg -> arg BINARY_XOR_OP arg
Rule 49    arg -> arg BINARY_AND_OP arg
Rule 50    arg -> arg COMBINED_COMPARISON_OP arg
Rule 51    arg -> arg GREATERTHAN arg
Rule 52    arg -> arg GREATERTHANEQUAL arg
Rule 53    arg -> arg LESSERTHAN arg
Rule 54    arg -> arg LESSERTHANEQUAL arg
Rule 55    arg -> arg EQUAL arg
Rule 56    arg -> arg CASE_EQUALITY arg
Rule 57    arg -> arg NOTEQUAL arg
Rule 58    arg -> arg MATCHED_STRINGS_OP arg
Rule 59    arg -> arg OPPOSITE_MATCHED_STRINGS_OP arg
Rule 60    arg -> NOT_SYMBOL arg
Rule 61    arg -> COMPLEMENT_OP arg
Rule 62    arg -> arg BINARY_LEFT_SHIFT_OP arg
Rule 63    arg -> arg BINARY_RIGHT_SHIFT_OP arg
Rule 64    arg -> arg AND arg
Rule 65    arg -> arg OR arg
Rule 66    arg -> DEFINED_OP arg
Rule 67    arg -> primary
Rule 68    variable -> VAR_GLOBAL
Rule 69    variable -> VAR_LOCAL
Rule 70    variable -> VAR_INSTANCE
Rule 71    variable -> VAR_CLASS
Rule 72    primary -> LPAREN compstmt RPAREN
Rule 73    primary -> literal
Rule 74    primary -> variable
Rule 75    primary -> primary UNARY_OP IDENTIFIER
Rule 76    primary -> UNARY_OP IDENTIFIER
Rule 77    primary -> primary LBRACKET RBRACKET
Rule 78    primary -> primary LBRACKET args RBRACKET
Rule 79    primary -> LBRACKET RBRACKET
Rule 80    primary -> LBRACKET args RBRACKET
Rule 81    primary -> LBRACKET args COMMA RBRACKET
Rule 82    primary -> LKEY RKEY
Rule 83    primary -> LKEY args RKEY
Rule 84    primary -> LKEY assocs RKEY
Rule 85    primary -> LKEY args COMMA RKEY
Rule 86    primary -> LKEY assocs COMMA RKEY
Rule 87    primary -> RETURN
Rule 88    primary -> RETURN LPAREN RPAREN
Rule 89    primary -> RETURN LPAREN call_args RPAREN
Rule 90    primary -> YIELD
Rule 91    primary -> YIELD LPAREN RPAREN
Rule 92    primary -> YIELD LPAREN call_args RPAREN
Rule 93    primary -> DEFINED_OP LPAREN arg LPAREN
Rule 94    primary -> function
Rule 95    primary -> function LKEY compstmt LKEY
Rule 96    primary -> function LKEY OR_SYMBOL OR_SYMBOL compstmt LKEY
Rule 97    primary -> function LKEY OR_SYMBOL block_var OR_SYMBOL compstmt LKEY
Rule 98    primary -> IF expr then compstmt END
Rule 99    primary -> IF expr then compstmt elsif END
Rule 100   primary -> IF expr then compstmt elsif ELSE compstmt END
Rule 101   primary -> UNLESS expr then compstmt END
Rule 102   primary -> UNLESS expr then compstmt ELSE compstmt END
Rule 103   primary -> WHILE expr do compstmt END
Rule 104   primary -> UNTIL expr do compstmt END
Rule 105   primary -> CASE compstmt when END
Rule 106   primary -> CASE compstmt when ELSE compstmt END
Rule 107   primary -> FOR block_var IN expr do compstmt END
Rule 108   primary -> BEGIN compstmt rescue END
Rule 109   primary -> BEGIN compstmt rescue ELSE compstmt END
Rule 110   primary -> BEGIN compstmt rescue ENSURE compstmt END
Rule 111   primary -> BEGIN compstmt rescue ELSE compstmt ENSURE compstmt END
Rule 112   primary -> CLASS IDENTIFIER compstmt END
Rule 113   primary -> CLASS IDENTIFIER LESSERTHAN IDENTIFIER compstmt END
Rule 114   primary -> MODULE IDENTIFIER compstmt END
Rule 115   primary -> DEF fname argdecl compstmt END
Rule 116   primary -> DEF singleton DOT fname argdecl compstmt END
Rule 117   primary -> DEF singleton UNARY_OP fname argdecl compstmt END
Rule 118   elsif -> ELSIF expr then compstmt
Rule 119   elsif -> ELSIF expr then compstmt elsif
Rule 120   when -> WHEN when_args then compstmt
Rule 121   when -> when WHEN when_args then compstmt
Rule 122   rescue -> RESCUE args do compstmt
Rule 123   rescue -> RESCUE do compstmt
Rule 124   rescue -> rescue RESCUE args do compstmt
Rule 125   rescue -> rescue RESCUE do compstmt
Rule 126   when_args -> args
Rule 127   when_args -> args COMMA TIMES arg
Rule 128   when_args -> TIMES arg
Rule 129   then -> TERM
Rule 130   then -> THEN
Rule 131   then -> TERM THEN
Rule 132   do -> term
Rule 133   do -> DO
Rule 134   do -> term DO
Rule 135   term -> TERM
Rule 136   mrhs -> args
Rule 137   mrhs -> args COMMA
Rule 138   mrhs -> args TIMES
Rule 139   mrhs -> args arg
Rule 140   mrhs -> TIMES arg
Rule 141   lhs -> variable
Rule 142   lhs -> primary LBRACKET RBRACKET
Rule 143   lhs -> primary LBRACKET args RBRACKET
Rule 144   lhs -> primary DOT IDENTIFIER
Rule 145   block_var -> lhs
Rule 146   block_var -> mlhs
Rule 147   mlhs -> mlhs_item COMMA mlhs_item TIMES
Rule 148   mlhs -> mlhs_item COMMA mlhs_item lhs
Rule 149   mlhs -> mlhs_item COMMA mult_mlhs_item TIMES
Rule 150   mlhs -> mlhs_item COMMA mult_mlhs_item lhs
Rule 151   mlhs -> TIMES lhs
Rule 152   mult_mlhs_item -> COMMA mlhs_item
Rule 153   mlhs_item -> lhs
Rule 154   mlhs_item -> LPAREN mlhs RPAREN
Rule 155   args -> arg
Rule 156   args -> arg COMMA arg
Rule 157   argdecl -> LPAREN arglist RPAREN
Rule 158   argdecl -> arglist term
Rule 159   arglist -> IDENTIFIER
Rule 160   arglist -> IDENTIFIER COMMA IDENTIFIER
Rule 161   arglist -> IDENTIFIER COMMA & IDENTIFIER
Rule 162   singleton -> variable
Rule 163   singleton -> LPAREN expr RPAREN
Rule 164   assocs -> assoc
Rule 165   assocs -> assoc COMMA assoc
Rule 166   assoc -> arg HASH_ROCKET arg
Rule 167   call_args -> args
Rule 168   call_args -> args COMMA assocs
Rule 169   call_args -> args COMMA TIMES arg
Rule 170   call_args -> args COMMA BINARY_AND_OP arg
Rule 171   call_args -> args COMMA assocs COMMA TIMES arg
Rule 172   call_args -> args COMMA assocs COMMA BINARY_AND_OP arg
Rule 173   call_args -> args COMMA TIMES arg COMMA BINARY_AND_OP arg
Rule 174   call_args -> args COMMA assocs COMMA TIMES arg COMMA BINARY_AND_OP arg
Rule 175   call_args -> assocs
Rule 176   call_args -> assocs COMMA TIMES arg
Rule 177   call_args -> assocs COMMA BINARY_AND_OP arg
Rule 178   call_args -> assocs COMMA TIMES arg COMMA BINARY_AND_OP arg
Rule 179   call_args -> TIMES arg
Rule 180   call_args -> TIMES arg COMMA BINARY_AND_OP arg
Rule 181   call_args -> BINARY_AND_OP arg
Rule 182   call_args -> command
Rule 183   literal -> NUMBER
Rule 184   literal -> SYMBOL
Rule 185   literal -> STRING
Rule 186   literal -> IDENTIFIER
Rule 187   fname -> IDENTIFIER
Rule 188   fname -> RANGE_INCLUSIVE
Rule 189   fname -> OR_SYMBOL
Rule 190   fname -> BINARY_AND_OP
Rule 191   fname -> BINARY_XOR_OP
Rule 192   fname -> COMBINED_COMPARISON_OP
Rule 193   fname -> EQUAL
Rule 194   fname -> CASE_EQUALITY
Rule 195   fname -> MATCHED_STRINGS_OP
Rule 196   fname -> GREATERTHAN
Rule 197   fname -> GREATERTHANEQUAL
Rule 198   fname -> LESSERTHAN
Rule 199   fname -> LESSERTHANEQUAL
Rule 200   fname -> PLUS
Rule 201   fname -> MINUS
Rule 202   fname -> TIMES
Rule 203   fname -> DIVIDE
Rule 204   fname -> MOD
Rule 205   fname -> POW
Rule 206   fname -> BINARY_RIGHT_SHIFT_OP
Rule 207   fname -> BINARY_LEFT_SHIFT_OP
Rule 208   fname -> COMPLEMENT_OP
Rule 209   fname -> OVERLOAD_PLUS
Rule 210   fname -> OVERLOAD_MINUS
Rule 211   fname -> LBRACKET RBRACKET
Rule 212   fname -> LBRACKET RBRACKET EQUAL_SYMBOL
Rule 213   operation -> IDENTIFIER
Rule 214   operation -> IDENTIFIER NOT_SYMBOL
Rule 215   operation -> IDENTIFIER OPTIONAL_SYMBOL
Rule 216   op_asgn -> PLUS_EQUAL
Rule 217   op_asgn -> MINUS_EQUAL
Rule 218   op_asgn -> TIMES_EQUAL
Rule 219   op_asgn -> DIVIDE_EQUAL
Rule 220   op_asgn -> MOD_EQUAL
Rule 221   op_asgn -> POW_EQUAL
Rule 222   op_asgn -> SINGLE_AND_EQUAL
Rule 223   op_asgn -> SINGLE_OR_EQUAL
Rule 224   op_asgn -> XOR_EQUAL
Rule 225   op_asgn -> BINARY_LEFT_EQUAL
Rule 226   op_asgn -> BINARY_RIGHT_EQUAL
Rule 227   op_asgn -> AND_EQUAL
Rule 228   op_asgn -> OR_EQUAL
Rule 229   math_operations -> arg PLUS arg
Rule 230   math_operations -> arg MINUS arg
Rule 231   math_operations -> arg TIMES arg
Rule 232   math_operations -> arg DIVIDE arg
Rule 233   math_operations -> arg MOD arg
Rule 234   math_operations -> arg POW arg
Rule 235   math_operations -> NUMBER PLUS NUMBER
Rule 236   math_operations -> NUMBER MINUS NUMBER
Rule 237   math_operations -> NUMBER TIMES NUMBER
Rule 238   math_operations -> NUMBER DIVIDE NUMBER
Rule 239   math_operations -> NUMBER MOD NUMBER
Rule 240   math_operations -> NUMBER POW NUMBER
Rule 241   boolean_operations -> arg AND arg
Rule 242   boolean_operations -> arg OR arg
Rule 243   boolean_operations -> arg EQUAL arg
Rule 244   boolean_operations -> arg NOTEQUAL arg
Rule 245   boolean_operations -> arg GREATERTHAN arg
Rule 246   boolean_operations -> arg GREATERTHANEQUAL arg
Rule 247   boolean_operations -> arg LESSERTHAN arg
Rule 248   boolean_operations -> arg LESSERTHANEQUAL arg
Rule 249   boolean_operations -> NUMBER EQUAL NUMBER
Rule 250   boolean_operations -> NUMBER NOTEQUAL NUMBER
Rule 251   boolean_operations -> NUMBER GREATERTHAN NUMBER
Rule 252   boolean_operations -> NUMBER GREATERTHANEQUAL NUMBER
Rule 253   boolean_operations -> NUMBER LESSERTHAN NUMBER
Rule 254   boolean_operations -> NUMBER LESSERTHANEQUAL NUMBER
Rule 255   boolean_operations -> TRUE AND TRUE
Rule 256   boolean_operations -> TRUE OR TRUE
Rule 257   boolean_operations -> TRUE AND FALSE
Rule 258   boolean_operations -> TRUE OR FALSE
Rule 259   boolean_operations -> FALSE AND FALSE
Rule 260   boolean_operations -> FALSE OR FALSE
Rule 261   boolean_operations -> TRUE EQUAL TRUE
Rule 262   conditions -> arg IF arg
Rule 263   conditions -> arg ELSE arg
Rule 264   conditions -> arg ELSIF arg
Rule 265   conditions -> arg CASE arg
Rule 266   conditions -> arg UNLESS arg
Rule 267   conditions -> STRING IF STRING
Rule 268   conditions -> STRING ELSE STRING
Rule 269   conditions -> STRING ELSIF STRING
Rule 270   conditions -> STRING CASE STRING
Rule 271   conditions -> STRING UNLESS STRING
Rule 272   methods_datastructure -> arg EACH arg
Rule 273   methods_datastructure -> arg SORT arg
Rule 274   methods_datastructure -> arg LENGTH arg
Rule 275   methods_datastructure -> arg FIRST arg
Rule 276   methods_datastructure -> arg LAST arg

Terminals, with rules where they appear

&                    : 161
=                    : 16 18 40
ALIAS                : 9
AND                  : 21 64 241 255 257 259
AND_EQUAL            : 227
BEGIN                : 14 108 109 110 111
BINARY_AND_OP        : 49 170 172 173 174 177 178 180 181 190
BINARY_LEFT_EQUAL    : 225
BINARY_LEFT_SHIFT_OP : 62 207
BINARY_RIGHT_EQUAL   : 226
BINARY_RIGHT_SHIFT_OP : 63 206
BINARY_XOR_OP        : 48 191
BREAK                : 
CASE                 : 105 106 265 270
CASE_EQUALITY        : 56 194
CLASS                : 112 113
COMBINED_COMPARISON_OP : 50 192
COMMA                : 81 85 86 127 137 147 148 149 150 152 156 160 161 165 168 169 170 171 171 172 172 173 173 174 174 174 176 177 178 178 180
COMPLEMENT_OP        : 61 208
DEF                  : 115 116 117
DEFINED              : 
DEFINED_OP           : 66 93
DIVIDE               : 203 232 238
DIVIDE_EQUAL         : 219
DO                   : 133 134
DOT                  : 30 34 36 116 144
ELSE                 : 100 102 106 109 111 263 268
ELSIF                : 118 119 264 269
END                  : 7 15 16 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117
ENSURE               : 110 111
EQUAL                : 55 193 243 249 261
EQUAL_SYMBOL         : 212
EXPONENT_AND         : 
FALSE                : 257 258 259 259 260 260
FOR                  : 107
GREATERTHAN          : 51 196 245 251
GREATERTHANEQUAL     : 52 197 246 252
HASH_ROCKET          : 166
IDENTIFIER           : 75 76 112 113 113 114 144 159 160 160 161 161 186 187 213 214 215
IF                   : 10 98 99 100 262 267
IN                   : 107
LBRACKET             : 5 6 7 16 16 33 33 77 78 79 80 81 142 143 211 212
LESSERTHAN           : 53 113 198 247 253
LESSERTHANEQUAL      : 54 199 248 254
LKEY                 : 14 15 82 83 84 85 86 95 95 96 96 97 97
LPAREN               : 33 34 35 38 72 88 89 91 92 93 93 154 157 163
MATCHED_STRINGS_OP   : 58 195
MINUS                : 46 201 230 236
MINUS_EQUAL          : 217
MOD                  : 204 233 239
MODULE               : 114
MOD_EQUAL            : 220
NEXT                 : 
NIL                  : 
NOT                  : 23
NOTEQUAL             : 57 244 250
NOT_SYMBOL           : 25 60 214
NUMBER               : 183 235 235 236 236 237 237 238 238 239 239 240 240 249 249 250 250 251 251 252 252 253 253 254 254
OPPOSITE_MATCHED_STRINGS_OP : 59
OPTIONAL_SYMBOL      : 215
OR                   : 22 65 242 256 258 260
OR_EQUAL             : 228
OR_SYMBOL            : 7 7 16 16 47 96 96 97 97 189
OVERLOAD_MINUS       : 210
OVERLOAD_PLUS        : 209
PLUS                 : 45 200 229 235
PLUS_EQUAL           : 216
POW                  : 205 234 240
POW_EQUAL            : 221
PUTS                 : 
RANGE_EXCLUSIVE      : 43
RANGE_INCLUSIVE      : 42 188
RBRACKET             : 5 6 7 16 16 33 33 77 78 79 80 81 142 143 211 212
REDO                 : 
RESCUE               : 122 123 124 125
RETRY                : 
RETURN               : 19 87 88 89
RKEY                 : 14 15 82 83 84 85 86
RPAREN               : 33 34 35 38 72 88 89 91 92 154 157 163
SELF                 : 
SINGLE_AND_EQUAL     : 222
SINGLE_OR_EQUAL      : 223
STRING               : 185 267 267 268 268 269 269 270 270 271 271
SUPER                : 32 38 39
SYMBOL               : 184
TERM                 : 129 131 135
THEN                 : 130 131
TIMES                : 127 128 138 140 147 149 151 169 171 173 174 176 178 179 180 202 231 237
TIMES_EQUAL          : 218
TRUE                 : 255 255 256 256 257 258 261 261
UNARY_OP             : 31 35 37 75 76 117
UNDEF                : 8
UNLESS               : 12 101 102 266 271
UNTIL                : 13 104
VAR_CLASS            : 71
VAR_GLOBAL           : 68
VAR_INSTANCE         : 70
VAR_LOCAL            : 69
VAR_SYSTEM           : 
WHEN                 : 120 121
WHILE                : 11 103
XOR_EQUAL            : 224
YIELD                : 20 90 91 92
_FILE_               : 
_LINE_               : 
error                : 

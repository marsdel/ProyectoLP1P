
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND AND_EQUAL BEGIN BINARY_AND_OP BINARY_LEFT_EQUAL BINARY_LEFT_SHIFT_OP BINARY_RIGHT_EQUAL BINARY_RIGHT_SHIFT_OP BINARY_XOR_OP BREAK CASE CASE_EQUALITY CLASS COMBINED_COMPARISON_OP COMMA COMPLEMENT_OP DEF DEFINED DEFINED_OP DIVIDE DIVIDE_EQUAL DO DOT DOUBLE_QUOTED ELSE ELSIF END ENSURE EQUAL EQUAL_SYMBOL EXPONENT_AND FALSE FOR GREATERTHAN GREATERTHANEQUAL HASH_ROCKET IDENTIFIER IF IN LBRACKET LESSERTHAN LESSERTHANEQUAL LKEY LPAREN MATCHED_STRINGS_OP MINUS MINUS_EQUAL MOD MODULE MOD_EQUAL NEXT NIL NOT NOTEQUAL NOT_SYMBOL NUMBER NUMBER_SIGN OPPOSITE_MATCHED_STRINGS_OP OPTIONAL_SYMBOL OR OR_EQUAL OR_SYMBOL OVERLOAD_MINUS OVERLOAD_PLUS PLUS PLUS_EQUAL POW POW_EQUAL PUTS RANGE_EXCLUSIVE RANGE_INCLUSIVE RBRACKET REDO RESCUE RETRY RETURN RKEY RPAREN SELF SINGLE_AND_EQUAL SINGLE_OR_EQUAL STRING SUPER SYMBOL TERM THEN TIMES TIMES_EQUAL TRUE UNARY_OP UNDEF UNLESS UNTIL VAR_CLASS VAR_CONSTANT VAR_GLOBAL VAR_INSTANCE VAR_LOCAL VAR_SYSTEM WHEN WHILE XOR_EQUAL YIELD _FILE_ _LINE_program : expressionexpression : string_literals\n                    | variable\n                    | array\n                    | hash\n                    | method_invocation\n                    | super\n                    | assignment\n                    | expression_operations\n                    | control_structure             \n                    | class_definition\n                    | module_definition\n                    | method_definition\n                    | alias\n                    | undef\n                    | definedvariable : VAR_GLOBAL\n                    | VAR_INSTANCE\n                    | VAR_CLASS\n                    | VAR_LOCAL\n                    | VAR_SYSTEM \n                    | VAR_CONSTANTstring_literals : STRING\n                        | string_concat  string_concat : DOUBLE_QUOTED IDENTIFIER concat DOUBLE_QUOTED\n                        | DOUBLE_QUOTED IDENTIFIER concat IDENTIFIER DOUBLE_QUOTED concat : NUMBER_SIGN LKEY IDENTIFIER RKEYarray : LBRACKET args_array RBRACKETarray_data : IDENTIFIER LBRACKET NUMBER RBRACKETargs_array : data\n                    | data COMMA args_arrayhash : LKEY args_hash RKEYargs_hash : data HASH_ROCKET data\n                | data HASH_ROCKET data COMMA args_hashfunction : IDENTIFIER LPAREN RPAREN\n                | IDENTIFIER LPAREN args_method RPARENsuper : SUPER LPAREN RPAREN\n            | SUPER LPAREN args_method RPARENmethod_invocation : IDENTIFIER DOT IDENTIFIER LPAREN RPAREN\n                        | IDENTIFIER DOT IDENTIFIER LPAREN args_method RPAREN\n                        | IDENTIFIER DOT IDENTIFIERargs_method : data\n                | data COMMA args_methodassignment : variable EQUAL_SYMBOL data\n                    | array_data EQUAL_SYMBOL data\n                    | method_invocation EQUAL_SYMBOL data \n                    | self_assigment\n                    | mult_assigmentself_assigment : variable op_assigment dataop_assigment : PLUS_EQUAL\n                    | MINUS_EQUAL\n                    | TIMES_EQUAL\n                    | DIVIDE_EQUAL\n                    | MOD_EQUAL\n                    | POW_EQUALmult_assigment : list_var EQUAL_SYMBOL args_methodlist_var : variable COMMA\n                | variable COMMA list_var\n                | variablecontrol_structure : ifif : IF expression expression END\n            | IF expression THEN expression END\n            | IF expression expression elsif END\n            | IF expression THEN expression elsif END\n            | IF expression expression else END\n            | IF expression THEN expression else END\n            | IF expression expression elsif else END\n            | IF expression THEN expression elsif else ENDelsif :  ELSIF expression expression\n                | ELSIF expression THEN expressionelse : ELSE expression class_definition : CLASS IDENTIFIER expression END\n                        | CLASS IDENTIFIER LESSERTHAN IDENTIFIER expression END module_definition : MODULE IDENTIFIER expression END method_definition : DEF function expression END  alias : ALIAS IDENTIFIER IDENTIFIER\n\t            | ALIAS VAR_GLOBAL VAR_GLOBAL undef : UNDEF IDENTIFIER defined : DEFINED_OP expressionexpression_operations : opmate\n                            | LPAREN opmate RPAREN\n                            | expression_operations op expression_operations\n                            | expression_operations op opmate\n                            | LPAREN opmate RPAREN op expression_operations\n                            | expression_operations op LPAREN opmate RPAREN\n                opmate : data op dataop : PLUS\n        | MINUS\n        | TIMES\n        | DIVIDE\n        | MOD\n        | EQUAL\n        | NOTEQUAL\n        | GREATERTHAN\n        | GREATERTHANEQUAL\n        | LESSERTHAN\n        | LESSERTHANEQUAL\n    data : NUMBER\n            | STRING\n            | variable'
    
_lr_action_items = {'STRING':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,33,34,35,36,42,44,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,78,79,80,81,82,83,87,88,90,91,92,93,96,97,98,99,100,101,102,103,104,106,107,109,110,111,116,117,118,121,123,127,129,130,131,132,133,134,135,136,138,141,144,145,147,148,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[18,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,71,71,71,-47,-48,-80,-60,18,-98,18,71,71,-50,-51,-52,-53,-54,-55,71,71,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-99,-100,71,71,71,18,18,18,-78,-79,71,18,-44,-49,-46,-82,-80,71,-28,71,-32,71,-41,-81,-37,-42,-86,-45,71,-76,-77,-56,18,71,71,-38,71,-72,18,-74,-75,-35,-25,-61,18,18,-81,71,-39,-84,-43,-36,-26,-63,-65,18,-62,-40,-73,-67,18,-64,-66,-68,]),'VAR_GLOBAL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,33,34,35,36,40,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,78,79,80,81,82,83,86,87,88,90,91,92,93,96,97,98,99,100,101,102,103,104,106,107,109,110,111,116,117,118,121,123,127,129,130,131,132,133,134,135,136,138,141,144,145,147,148,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[20,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,20,20,20,-47,-48,-80,-60,86,20,-98,20,20,20,20,-50,-51,-52,-53,-54,-55,20,20,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-99,-100,20,20,20,20,20,20,118,-78,-79,20,20,-44,-49,-46,-82,-80,20,-28,20,-32,20,-41,-81,-37,-42,-86,-45,20,-76,-77,-56,20,20,20,-38,20,-72,20,-74,-75,-35,-25,-61,20,20,-81,20,-39,-84,-43,-36,-26,-63,-65,20,-62,-40,-73,-67,20,-64,-66,-68,]),'VAR_INSTANCE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,33,34,35,36,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,78,79,80,81,82,83,87,88,90,91,92,93,96,97,98,99,100,101,102,103,104,106,107,109,110,111,116,117,118,121,123,127,129,130,131,132,133,134,135,136,138,141,144,145,147,148,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[21,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,21,21,21,-47,-48,-80,-60,21,-98,21,21,21,21,-50,-51,-52,-53,-54,-55,21,21,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-99,-100,21,21,21,21,21,21,-78,-79,21,21,-44,-49,-46,-82,-80,21,-28,21,-32,21,-41,-81,-37,-42,-86,-45,21,-76,-77,-56,21,21,21,-38,21,-72,21,-74,-75,-35,-25,-61,21,21,-81,21,-39,-84,-43,-36,-26,-63,-65,21,-62,-40,-73,-67,21,-64,-66,-68,]),'VAR_CLASS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,33,34,35,36,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,78,79,80,81,82,83,87,88,90,91,92,93,96,97,98,99,100,101,102,103,104,106,107,109,110,111,116,117,118,121,123,127,129,130,131,132,133,134,135,136,138,141,144,145,147,148,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[22,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,22,22,22,-47,-48,-80,-60,22,-98,22,22,22,22,-50,-51,-52,-53,-54,-55,22,22,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-99,-100,22,22,22,22,22,22,-78,-79,22,22,-44,-49,-46,-82,-80,22,-28,22,-32,22,-41,-81,-37,-42,-86,-45,22,-76,-77,-56,22,22,22,-38,22,-72,22,-74,-75,-35,-25,-61,22,22,-81,22,-39,-84,-43,-36,-26,-63,-65,22,-62,-40,-73,-67,22,-64,-66,-68,]),'VAR_LOCAL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,33,34,35,36,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,78,79,80,81,82,83,87,88,90,91,92,93,96,97,98,99,100,101,102,103,104,106,107,109,110,111,116,117,118,121,123,127,129,130,131,132,133,134,135,136,138,141,144,145,147,148,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[23,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,23,23,23,-47,-48,-80,-60,23,-98,23,23,23,23,-50,-51,-52,-53,-54,-55,23,23,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-99,-100,23,23,23,23,23,23,-78,-79,23,23,-44,-49,-46,-82,-80,23,-28,23,-32,23,-41,-81,-37,-42,-86,-45,23,-76,-77,-56,23,23,23,-38,23,-72,23,-74,-75,-35,-25,-61,23,23,-81,23,-39,-84,-43,-36,-26,-63,-65,23,-62,-40,-73,-67,23,-64,-66,-68,]),'VAR_SYSTEM':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,33,34,35,36,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,78,79,80,81,82,83,87,88,90,91,92,93,96,97,98,99,100,101,102,103,104,106,107,109,110,111,116,117,118,121,123,127,129,130,131,132,133,134,135,136,138,141,144,145,147,148,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[24,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,24,24,24,-47,-48,-80,-60,24,-98,24,24,24,24,-50,-51,-52,-53,-54,-55,24,24,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-99,-100,24,24,24,24,24,24,-78,-79,24,24,-44,-49,-46,-82,-80,24,-28,24,-32,24,-41,-81,-37,-42,-86,-45,24,-76,-77,-56,24,24,24,-38,24,-72,24,-74,-75,-35,-25,-61,24,24,-81,24,-39,-84,-43,-36,-26,-63,-65,24,-62,-40,-73,-67,24,-64,-66,-68,]),'VAR_CONSTANT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,33,34,35,36,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,78,79,80,81,82,83,87,88,90,91,92,93,96,97,98,99,100,101,102,103,104,106,107,109,110,111,116,117,118,121,123,127,129,130,131,132,133,134,135,136,138,141,144,145,147,148,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[25,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,25,25,25,-47,-48,-80,-60,25,-98,25,25,25,25,-50,-51,-52,-53,-54,-55,25,25,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-99,-100,25,25,25,25,25,25,-78,-79,25,25,-44,-49,-46,-82,-80,25,-28,25,-32,25,-41,-81,-37,-42,-86,-45,25,-76,-77,-56,25,25,25,-38,25,-72,25,-74,-75,-35,-25,-61,25,25,-81,25,-39,-84,-43,-36,-26,-63,-65,25,-62,-40,-73,-67,25,-64,-66,-68,]),'LBRACKET':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,33,34,35,36,42,44,46,71,72,81,82,83,87,88,91,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,121,123,130,132,133,134,135,136,138,141,144,145,147,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[26,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,76,-47,-48,-80,-60,26,-98,26,-99,-100,26,26,26,-78,-79,26,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,-76,-77,-56,26,-38,-72,26,-74,-75,-35,-25,-61,26,26,-81,-39,-84,-43,-36,-26,-63,-65,26,-62,-40,-73,-67,26,-64,-66,-68,]),'LKEY':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,42,44,46,71,72,81,82,83,87,88,91,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,120,121,123,130,132,133,134,135,136,138,141,144,145,147,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[27,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,27,-98,27,-99,-100,27,27,27,-78,-79,27,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,-76,-77,140,-56,27,-38,-72,27,-74,-75,-35,-25,-61,27,27,-81,-39,-84,-43,-36,-26,-63,-65,27,-62,-40,-73,-67,27,-64,-66,-68,]),'IDENTIFIER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,37,38,39,40,41,42,43,44,46,71,72,75,81,82,83,85,87,88,91,92,93,96,97,98,100,102,104,106,107,109,110,111,113,117,118,119,121,123,130,132,133,134,135,136,138,140,141,144,145,147,149,151,152,154,155,157,159,160,162,166,167,168,169,171,172,174,176,],[28,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,81,82,84,85,87,28,89,-98,28,-99,-100,104,28,28,28,117,-78,-79,28,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,133,-76,-77,139,-56,28,-38,-72,28,-74,-75,-35,-25,156,-61,28,28,-81,-39,-84,-43,-36,-26,-63,-65,28,-62,-40,-73,-27,-67,28,-64,-66,-68,]),'SUPER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,42,44,46,71,72,81,82,83,87,88,91,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,121,123,130,132,133,134,135,136,138,141,144,145,147,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[30,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,30,-98,30,-99,-100,30,30,30,-78,-79,30,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,-76,-77,-56,30,-38,-72,30,-74,-75,-35,-25,-61,30,30,-81,-39,-84,-43,-36,-26,-63,-65,30,-62,-40,-73,-67,30,-64,-66,-68,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,33,34,35,36,42,44,46,57,58,59,60,61,62,63,64,65,66,67,68,71,72,81,82,83,84,87,88,91,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,121,123,129,130,132,133,134,135,136,138,141,144,145,147,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[29,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,78,-47,-48,-80,-60,29,-98,29,99,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-99,-100,29,29,29,116,-78,-79,29,-44,-49,-46,-82,-80,-28,-32,127,-81,-37,-42,-86,-45,-76,-77,-56,29,29,-38,-72,29,-74,-75,-35,-25,-61,29,29,-81,-39,-84,-43,-36,-26,-63,-65,29,-62,-40,-73,-67,29,-64,-66,-68,]),'CLASS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,42,44,46,71,72,81,82,83,87,88,91,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,121,123,130,132,133,134,135,136,138,141,144,145,147,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[37,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,37,-98,37,-99,-100,37,37,37,-78,-79,37,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,-76,-77,-56,37,-38,-72,37,-74,-75,-35,-25,-61,37,37,-81,-39,-84,-43,-36,-26,-63,-65,37,-62,-40,-73,-67,37,-64,-66,-68,]),'MODULE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,42,44,46,71,72,81,82,83,87,88,91,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,121,123,130,132,133,134,135,136,138,141,144,145,147,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[38,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,38,-98,38,-99,-100,38,38,38,-78,-79,38,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,-76,-77,-56,38,-38,-72,38,-74,-75,-35,-25,-61,38,38,-81,-39,-84,-43,-36,-26,-63,-65,38,-62,-40,-73,-67,38,-64,-66,-68,]),'DEF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,42,44,46,71,72,81,82,83,87,88,91,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,121,123,130,132,133,134,135,136,138,141,144,145,147,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[39,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,39,-98,39,-99,-100,39,39,39,-78,-79,39,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,-76,-77,-56,39,-38,-72,39,-74,-75,-35,-25,-61,39,39,-81,-39,-84,-43,-36,-26,-63,-65,39,-62,-40,-73,-67,39,-64,-66,-68,]),'ALIAS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,42,44,46,71,72,81,82,83,87,88,91,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,121,123,130,132,133,134,135,136,138,141,144,145,147,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[40,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,40,-98,40,-99,-100,40,40,40,-78,-79,40,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,-76,-77,-56,40,-38,-72,40,-74,-75,-35,-25,-61,40,40,-81,-39,-84,-43,-36,-26,-63,-65,40,-62,-40,-73,-67,40,-64,-66,-68,]),'UNDEF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,42,44,46,71,72,81,82,83,87,88,91,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,121,123,130,132,133,134,135,136,138,141,144,145,147,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[41,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,41,-98,41,-99,-100,41,41,41,-78,-79,41,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,-76,-77,-56,41,-38,-72,41,-74,-75,-35,-25,-61,41,41,-81,-39,-84,-43,-36,-26,-63,-65,41,-62,-40,-73,-67,41,-64,-66,-68,]),'DEFINED_OP':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,42,44,46,71,72,81,82,83,87,88,91,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,121,123,130,132,133,134,135,136,138,141,144,145,147,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[42,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,42,-98,42,-99,-100,42,42,42,-78,-79,42,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,-76,-77,-56,42,-38,-72,42,-74,-75,-35,-25,-61,42,42,-81,-39,-84,-43,-36,-26,-63,-65,42,-62,-40,-73,-67,42,-64,-66,-68,]),'DOUBLE_QUOTED':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,42,44,46,71,72,81,82,83,87,88,91,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,119,121,123,130,132,133,134,135,136,138,139,141,144,145,147,149,151,152,154,155,157,159,160,162,166,167,168,169,171,172,174,176,],[43,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,43,-98,43,-99,-100,43,43,43,-78,-79,43,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,-76,-77,138,-56,43,-38,-72,43,-74,-75,-35,-25,155,-61,43,43,-81,-39,-84,-43,-36,-26,-63,-65,43,-62,-40,-73,-27,-67,43,-64,-66,-68,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,42,44,46,71,72,81,82,83,87,88,91,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,121,123,130,132,133,134,135,136,138,141,144,145,147,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,46,-98,46,-99,-100,46,46,46,-78,-79,46,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,-76,-77,-56,46,-38,-72,46,-74,-75,-35,-25,-61,46,46,-81,-39,-84,-43,-36,-26,-63,-65,46,-62,-40,-73,-67,46,-64,-66,-68,]),'NUMBER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,33,34,35,36,42,44,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,76,78,79,80,81,82,83,87,88,90,91,92,93,96,97,98,99,100,101,102,103,104,106,107,109,110,111,116,117,118,121,123,127,129,130,131,132,133,134,135,136,138,141,144,145,147,148,149,151,152,154,155,157,159,160,162,166,167,169,171,172,174,176,],[44,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,44,44,44,-47,-48,-80,-60,44,-98,44,44,44,-50,-51,-52,-53,-54,-55,44,44,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-99,-100,105,44,44,44,44,44,44,-78,-79,44,44,-44,-49,-46,-82,-80,44,-28,44,-32,44,-41,-81,-37,-42,-86,-45,44,-76,-77,-56,44,44,44,-38,44,-72,44,-74,-75,-35,-25,-61,44,44,-81,44,-39,-84,-43,-36,-26,-63,-65,44,-62,-40,-73,-67,44,-64,-66,-68,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,44,71,72,87,88,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,121,130,132,134,135,138,141,147,149,151,152,155,157,159,162,166,167,169,172,174,176,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,-98,-99,-100,-78,-79,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,-76,-77,-56,-38,-72,-74,-75,-25,-61,-81,-39,-84,-43,-26,-63,-65,-62,-40,-73,-67,-64,-66,-68,]),'THEN':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,44,71,72,87,88,91,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,121,130,132,134,135,138,141,147,149,151,152,155,157,159,160,162,166,167,169,172,174,176,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,-98,-99,-100,-78,-79,123,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,-76,-77,-56,-38,-72,-74,-75,-25,-61,-81,-39,-84,-43,-26,-63,-65,171,-62,-40,-73,-67,-64,-66,-68,]),'END':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,44,71,72,87,88,92,93,96,97,98,100,102,104,106,107,109,110,111,112,114,115,117,118,121,122,130,132,134,135,138,141,142,143,146,147,149,151,152,153,155,157,158,159,161,162,163,164,166,167,169,170,172,173,174,175,176,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,-98,-99,-100,-78,-79,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,132,134,135,-76,-77,-56,141,-38,-72,-74,-75,-25,-61,157,159,162,-81,-39,-84,-43,167,-26,-63,169,-65,-71,-62,172,174,-40,-73,-67,-69,-64,176,-66,-70,-68,]),'ELSIF':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,44,71,72,87,88,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,121,122,130,132,134,135,138,141,146,147,149,151,152,155,157,159,162,166,167,169,172,174,176,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,-98,-99,-100,-78,-79,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,-76,-77,-56,144,-38,-72,-74,-75,-25,-61,144,-81,-39,-84,-43,-26,-63,-65,-62,-40,-73,-67,-64,-66,-68,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,35,36,44,71,72,87,88,92,93,96,97,98,100,102,104,106,107,109,110,111,117,118,121,122,130,132,134,135,138,141,142,146,147,149,151,152,155,157,159,162,163,166,167,169,170,172,174,175,176,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-23,-24,-17,-18,-19,-20,-21,-22,-47,-48,-80,-60,-98,-99,-100,-78,-79,-44,-49,-46,-82,-80,-28,-32,-41,-81,-37,-42,-86,-45,-76,-77,-56,145,-38,-72,-74,-75,-25,-61,145,145,-81,-39,-84,-43,-26,-63,-65,-62,145,-40,-73,-67,-69,-64,-66,-70,-68,]),'EQUAL_SYMBOL':([4,7,20,21,22,23,24,25,32,45,49,94,95,104,128,149,166,],[47,56,-17,-18,-19,-20,-21,-22,80,90,-57,-59,-58,-41,-29,-39,-40,]),'COMMA':([4,20,21,22,23,24,25,44,70,71,72,94,109,126,],[49,-17,-18,-19,-20,-21,-22,-98,101,-99,-100,49,131,148,]),'PLUS':([4,10,18,20,21,22,23,24,25,31,35,44,71,72,97,98,106,110,147,151,],[-100,58,-99,-17,-18,-19,-20,-21,-22,58,-80,-98,-99,-100,58,-80,58,-86,58,58,]),'MINUS':([4,10,18,20,21,22,23,24,25,31,35,44,71,72,97,98,106,110,147,151,],[-100,59,-99,-17,-18,-19,-20,-21,-22,59,-80,-98,-99,-100,59,-80,59,-86,59,59,]),'TIMES':([4,10,18,20,21,22,23,24,25,31,35,44,71,72,97,98,106,110,147,151,],[-100,60,-99,-17,-18,-19,-20,-21,-22,60,-80,-98,-99,-100,60,-80,60,-86,60,60,]),'DIVIDE':([4,10,18,20,21,22,23,24,25,31,35,44,71,72,97,98,106,110,147,151,],[-100,61,-99,-17,-18,-19,-20,-21,-22,61,-80,-98,-99,-100,61,-80,61,-86,61,61,]),'MOD':([4,10,18,20,21,22,23,24,25,31,35,44,71,72,97,98,106,110,147,151,],[-100,62,-99,-17,-18,-19,-20,-21,-22,62,-80,-98,-99,-100,62,-80,62,-86,62,62,]),'EQUAL':([4,10,18,20,21,22,23,24,25,31,35,44,71,72,97,98,106,110,147,151,],[-100,63,-99,-17,-18,-19,-20,-21,-22,63,-80,-98,-99,-100,63,-80,63,-86,63,63,]),'NOTEQUAL':([4,10,18,20,21,22,23,24,25,31,35,44,71,72,97,98,106,110,147,151,],[-100,64,-99,-17,-18,-19,-20,-21,-22,64,-80,-98,-99,-100,64,-80,64,-86,64,64,]),'GREATERTHAN':([4,10,18,20,21,22,23,24,25,31,35,44,71,72,97,98,106,110,147,151,],[-100,65,-99,-17,-18,-19,-20,-21,-22,65,-80,-98,-99,-100,65,-80,65,-86,65,65,]),'GREATERTHANEQUAL':([4,10,18,20,21,22,23,24,25,31,35,44,71,72,97,98,106,110,147,151,],[-100,66,-99,-17,-18,-19,-20,-21,-22,66,-80,-98,-99,-100,66,-80,66,-86,66,66,]),'LESSERTHAN':([4,10,18,20,21,22,23,24,25,31,35,44,71,72,81,97,98,106,110,147,151,],[-100,67,-99,-17,-18,-19,-20,-21,-22,67,-80,-98,-99,-100,113,67,-80,67,-86,67,67,]),'LESSERTHANEQUAL':([4,10,18,20,21,22,23,24,25,31,35,44,71,72,97,98,106,110,147,151,],[-100,68,-99,-17,-18,-19,-20,-21,-22,68,-80,-98,-99,-100,68,-80,68,-86,68,68,]),'PLUS_EQUAL':([4,20,21,22,23,24,25,],[50,-17,-18,-19,-20,-21,-22,]),'MINUS_EQUAL':([4,20,21,22,23,24,25,],[51,-17,-18,-19,-20,-21,-22,]),'TIMES_EQUAL':([4,20,21,22,23,24,25,],[52,-17,-18,-19,-20,-21,-22,]),'DIVIDE_EQUAL':([4,20,21,22,23,24,25,],[53,-17,-18,-19,-20,-21,-22,]),'MOD_EQUAL':([4,20,21,22,23,24,25,],[54,-17,-18,-19,-20,-21,-22,]),'POW_EQUAL':([4,20,21,22,23,24,25,],[55,-17,-18,-19,-20,-21,-22,]),'RBRACKET':([20,21,22,23,24,25,44,69,70,71,72,105,125,],[-17,-18,-19,-20,-21,-22,-98,100,-30,-99,-100,128,-31,]),'HASH_ROCKET':([20,21,22,23,24,25,44,71,72,74,],[-17,-18,-19,-20,-21,-22,-98,-99,-100,103,]),'RPAREN':([20,21,22,23,24,25,44,71,72,77,78,108,109,110,116,124,127,137,150,152,],[-17,-18,-19,-20,-21,-22,-98,-99,-100,106,107,130,-42,-86,136,147,149,154,166,-43,]),'RKEY':([20,21,22,23,24,25,44,71,72,73,126,156,165,],[-17,-18,-19,-20,-21,-22,-98,-99,-100,102,-33,168,-34,]),'DOT':([28,],[75,]),'NUMBER_SIGN':([89,],[120,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'expression':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[2,88,91,112,114,115,122,146,153,160,161,170,175,]),'string_literals':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[3,3,3,3,3,3,3,3,3,3,3,3,3,]),'variable':([0,26,27,29,42,46,47,48,49,56,57,78,79,80,81,82,83,90,91,99,101,103,116,123,127,129,131,133,144,145,148,160,171,],[4,72,72,72,4,4,72,72,94,72,72,72,72,72,4,4,4,72,4,72,72,72,72,4,72,72,72,4,4,4,72,4,4,]),'array':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'hash':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'method_invocation':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'super':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'assignment':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'expression_operations':([0,42,46,57,81,82,83,91,123,129,133,144,145,160,171,],[10,10,10,97,10,10,10,10,10,151,10,10,10,10,10,]),'control_structure':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'class_definition':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'module_definition':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'method_definition':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'alias':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'undef':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'defined':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'string_concat':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'data':([0,26,27,29,42,46,47,48,56,57,78,79,80,81,82,83,90,91,99,101,103,116,123,127,129,131,133,144,145,148,160,171,],[31,70,74,31,31,31,92,93,96,31,109,110,111,31,31,31,109,31,31,70,126,109,31,109,31,109,31,31,31,74,31,31,]),'array_data':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[32,32,32,32,32,32,32,32,32,32,32,32,32,]),'self_assigment':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'mult_assigment':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[34,34,34,34,34,34,34,34,34,34,34,34,34,]),'opmate':([0,29,42,46,57,81,82,83,91,99,123,129,133,144,145,160,171,],[35,77,35,35,98,35,35,35,35,124,35,35,35,35,35,35,35,]),'if':([0,42,46,81,82,83,91,123,133,144,145,160,171,],[36,36,36,36,36,36,36,36,36,36,36,36,36,]),'list_var':([0,42,46,49,81,82,83,91,123,133,144,145,160,171,],[45,45,45,95,45,45,45,45,45,45,45,45,45,45,]),'op_assigment':([4,],[48,]),'op':([10,31,97,106,147,151,],[57,79,57,129,129,57,]),'args_array':([26,101,],[69,125,]),'args_hash':([27,148,],[73,165,]),'function':([39,],[83,]),'args_method':([78,90,116,127,131,],[108,121,137,150,152,]),'concat':([89,],[119,]),'elsif':([122,146,],[142,163,]),'else':([122,142,146,163,],[143,158,164,173,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> expression','program',1,'p_program','sintactico_new.py',8),
  ('expression -> string_literals','expression',1,'p_expressions','sintactico_new.py',11),
  ('expression -> variable','expression',1,'p_expressions','sintactico_new.py',12),
  ('expression -> array','expression',1,'p_expressions','sintactico_new.py',13),
  ('expression -> hash','expression',1,'p_expressions','sintactico_new.py',14),
  ('expression -> method_invocation','expression',1,'p_expressions','sintactico_new.py',15),
  ('expression -> super','expression',1,'p_expressions','sintactico_new.py',16),
  ('expression -> assignment','expression',1,'p_expressions','sintactico_new.py',17),
  ('expression -> expression_operations','expression',1,'p_expressions','sintactico_new.py',18),
  ('expression -> control_structure','expression',1,'p_expressions','sintactico_new.py',19),
  ('expression -> class_definition','expression',1,'p_expressions','sintactico_new.py',20),
  ('expression -> module_definition','expression',1,'p_expressions','sintactico_new.py',21),
  ('expression -> method_definition','expression',1,'p_expressions','sintactico_new.py',22),
  ('expression -> alias','expression',1,'p_expressions','sintactico_new.py',23),
  ('expression -> undef','expression',1,'p_expressions','sintactico_new.py',24),
  ('expression -> defined','expression',1,'p_expressions','sintactico_new.py',25),
  ('variable -> VAR_GLOBAL','variable',1,'p_variable','sintactico_new.py',28),
  ('variable -> VAR_INSTANCE','variable',1,'p_variable','sintactico_new.py',29),
  ('variable -> VAR_CLASS','variable',1,'p_variable','sintactico_new.py',30),
  ('variable -> VAR_LOCAL','variable',1,'p_variable','sintactico_new.py',31),
  ('variable -> VAR_SYSTEM','variable',1,'p_variable','sintactico_new.py',32),
  ('variable -> VAR_CONSTANT','variable',1,'p_variable','sintactico_new.py',33),
  ('string_literals -> STRING','string_literals',1,'p_string_literals','sintactico_new.py',36),
  ('string_literals -> string_concat','string_literals',1,'p_string_literals','sintactico_new.py',37),
  ('string_concat -> DOUBLE_QUOTED IDENTIFIER concat DOUBLE_QUOTED','string_concat',4,'p_string_concat','sintactico_new.py',40),
  ('string_concat -> DOUBLE_QUOTED IDENTIFIER concat IDENTIFIER DOUBLE_QUOTED','string_concat',5,'p_string_concat','sintactico_new.py',41),
  ('concat -> NUMBER_SIGN LKEY IDENTIFIER RKEY','concat',4,'p_concat','sintactico_new.py',44),
  ('array -> LBRACKET args_array RBRACKET','array',3,'p_array','sintactico_new.py',47),
  ('array_data -> IDENTIFIER LBRACKET NUMBER RBRACKET','array_data',4,'p_array_data','sintactico_new.py',50),
  ('args_array -> data','args_array',1,'p_args_array','sintactico_new.py',53),
  ('args_array -> data COMMA args_array','args_array',3,'p_args_array','sintactico_new.py',54),
  ('hash -> LKEY args_hash RKEY','hash',3,'p_hash','sintactico_new.py',57),
  ('args_hash -> data HASH_ROCKET data','args_hash',3,'p_args_hash','sintactico_new.py',60),
  ('args_hash -> data HASH_ROCKET data COMMA args_hash','args_hash',5,'p_args_hash','sintactico_new.py',61),
  ('function -> IDENTIFIER LPAREN RPAREN','function',3,'p_function','sintactico_new.py',64),
  ('function -> IDENTIFIER LPAREN args_method RPAREN','function',4,'p_function','sintactico_new.py',65),
  ('super -> SUPER LPAREN RPAREN','super',3,'p_super','sintactico_new.py',67),
  ('super -> SUPER LPAREN args_method RPAREN','super',4,'p_super','sintactico_new.py',68),
  ('method_invocation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN','method_invocation',5,'p_method_invocation','sintactico_new.py',71),
  ('method_invocation -> IDENTIFIER DOT IDENTIFIER LPAREN args_method RPAREN','method_invocation',6,'p_method_invocation','sintactico_new.py',72),
  ('method_invocation -> IDENTIFIER DOT IDENTIFIER','method_invocation',3,'p_method_invocation','sintactico_new.py',73),
  ('args_method -> data','args_method',1,'p_args_method','sintactico_new.py',76),
  ('args_method -> data COMMA args_method','args_method',3,'p_args_method','sintactico_new.py',77),
  ('assignment -> variable EQUAL_SYMBOL data','assignment',3,'p_assignment','sintactico_new.py',80),
  ('assignment -> array_data EQUAL_SYMBOL data','assignment',3,'p_assignment','sintactico_new.py',81),
  ('assignment -> method_invocation EQUAL_SYMBOL data','assignment',3,'p_assignment','sintactico_new.py',82),
  ('assignment -> self_assigment','assignment',1,'p_assignment','sintactico_new.py',83),
  ('assignment -> mult_assigment','assignment',1,'p_assignment','sintactico_new.py',84),
  ('self_assigment -> variable op_assigment data','self_assigment',3,'p_self_assigment','sintactico_new.py',87),
  ('op_assigment -> PLUS_EQUAL','op_assigment',1,'p_op_assigment','sintactico_new.py',90),
  ('op_assigment -> MINUS_EQUAL','op_assigment',1,'p_op_assigment','sintactico_new.py',91),
  ('op_assigment -> TIMES_EQUAL','op_assigment',1,'p_op_assigment','sintactico_new.py',92),
  ('op_assigment -> DIVIDE_EQUAL','op_assigment',1,'p_op_assigment','sintactico_new.py',93),
  ('op_assigment -> MOD_EQUAL','op_assigment',1,'p_op_assigment','sintactico_new.py',94),
  ('op_assigment -> POW_EQUAL','op_assigment',1,'p_op_assigment','sintactico_new.py',95),
  ('mult_assigment -> list_var EQUAL_SYMBOL args_method','mult_assigment',3,'p_mult_assigment','sintactico_new.py',98),
  ('list_var -> variable COMMA','list_var',2,'p_list_var','sintactico_new.py',101),
  ('list_var -> variable COMMA list_var','list_var',3,'p_list_var','sintactico_new.py',102),
  ('list_var -> variable','list_var',1,'p_list_var','sintactico_new.py',103),
  ('control_structure -> if','control_structure',1,'p_control_structure','sintactico_new.py',107),
  ('if -> IF expression expression END','if',4,'p_if','sintactico_new.py',136),
  ('if -> IF expression THEN expression END','if',5,'p_if','sintactico_new.py',137),
  ('if -> IF expression expression elsif END','if',5,'p_if','sintactico_new.py',138),
  ('if -> IF expression THEN expression elsif END','if',6,'p_if','sintactico_new.py',139),
  ('if -> IF expression expression else END','if',5,'p_if','sintactico_new.py',140),
  ('if -> IF expression THEN expression else END','if',6,'p_if','sintactico_new.py',141),
  ('if -> IF expression expression elsif else END','if',6,'p_if','sintactico_new.py',142),
  ('if -> IF expression THEN expression elsif else END','if',7,'p_if','sintactico_new.py',143),
  ('elsif -> ELSIF expression expression','elsif',3,'p_elseif','sintactico_new.py',146),
  ('elsif -> ELSIF expression THEN expression','elsif',4,'p_elseif','sintactico_new.py',147),
  ('else -> ELSE expression','else',2,'p_else','sintactico_new.py',150),
  ('class_definition -> CLASS IDENTIFIER expression END','class_definition',4,'p_class_definition','sintactico_new.py',153),
  ('class_definition -> CLASS IDENTIFIER LESSERTHAN IDENTIFIER expression END','class_definition',6,'p_class_definition','sintactico_new.py',154),
  ('module_definition -> MODULE IDENTIFIER expression END','module_definition',4,'p_module_definition','sintactico_new.py',157),
  ('method_definition -> DEF function expression END','method_definition',4,'p_method_definition','sintactico_new.py',160),
  ('alias -> ALIAS IDENTIFIER IDENTIFIER','alias',3,'p_alias','sintactico_new.py',163),
  ('alias -> ALIAS VAR_GLOBAL VAR_GLOBAL','alias',3,'p_alias','sintactico_new.py',164),
  ('undef -> UNDEF IDENTIFIER','undef',2,'p_undef','sintactico_new.py',167),
  ('defined -> DEFINED_OP expression','defined',2,'p_defined','sintactico_new.py',170),
  ('expression_operations -> opmate','expression_operations',1,'p_expression_operations','sintactico_new.py',172),
  ('expression_operations -> LPAREN opmate RPAREN','expression_operations',3,'p_expression_operations','sintactico_new.py',173),
  ('expression_operations -> expression_operations op expression_operations','expression_operations',3,'p_expression_operations','sintactico_new.py',174),
  ('expression_operations -> expression_operations op opmate','expression_operations',3,'p_expression_operations','sintactico_new.py',175),
  ('expression_operations -> LPAREN opmate RPAREN op expression_operations','expression_operations',5,'p_expression_operations','sintactico_new.py',176),
  ('expression_operations -> expression_operations op LPAREN opmate RPAREN','expression_operations',5,'p_expression_operations','sintactico_new.py',177),
  ('opmate -> data op data','opmate',3,'p_opmate','sintactico_new.py',201),
  ('op -> PLUS','op',1,'p_op','sintactico_new.py',224),
  ('op -> MINUS','op',1,'p_op','sintactico_new.py',225),
  ('op -> TIMES','op',1,'p_op','sintactico_new.py',226),
  ('op -> DIVIDE','op',1,'p_op','sintactico_new.py',227),
  ('op -> MOD','op',1,'p_op','sintactico_new.py',228),
  ('op -> EQUAL','op',1,'p_op','sintactico_new.py',229),
  ('op -> NOTEQUAL','op',1,'p_op','sintactico_new.py',230),
  ('op -> GREATERTHAN','op',1,'p_op','sintactico_new.py',231),
  ('op -> GREATERTHANEQUAL','op',1,'p_op','sintactico_new.py',232),
  ('op -> LESSERTHAN','op',1,'p_op','sintactico_new.py',233),
  ('op -> LESSERTHANEQUAL','op',1,'p_op','sintactico_new.py',234),
  ('data -> NUMBER','data',1,'p_data','sintactico_new.py',238),
  ('data -> STRING','data',1,'p_data','sintactico_new.py',239),
  ('data -> variable','data',1,'p_data','sintactico_new.py',240),
]
